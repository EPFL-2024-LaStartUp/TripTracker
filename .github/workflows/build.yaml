name: Build App APK

env:
  # The name of the main module repository
  main_project_module: app


on:
  push:
    branches:
      - main

  pull_request:
    types:
#      FOR TESTING ONLY
      - opened
      - synchronize
      - reopened
#      REMOVE THIS BEFORE PUSH
      - closed

#  release:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: gradle

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Create local.properties and set API key
        run: |
          echo "API_KEY=\${{ secrets.API_KEY }}" > local.properties

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}

        run: |
          echo "${{ secrets.ENCODED_STRING }}" | base64 -d > $SIGNING_KEY_STORE_PATH

      - name: Build Signed Release APK
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease

      # Upload Artifact Build
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: APK(s) debug generated
          path: ${{ env.main_project_module }}/build/outputs/apk/debug/app-debug.apk

      # Save time to environment variable
      - name: Set current date and time as environment variables
        run: echo "date_time=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: AppRelease-${{ env.date_time }}
          release_name: App Release - ${{ env.date_time }}
          draft: false
          prerelease: false

      # Upload APK to Release
      - name: Upload APK to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/debug/app-debug.apk
          asset_name: TripTracker.apk
          asset_content_type: application/zip
